#! /bin/sh
### BEGIN INIT INFO
# Provides:          roscore
# Required-Start:    $local_fs $network$ $named $remote_fs $syslog $time
# Required-Stop:     $local_fs $network$ $named $remote_fs $syslog $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: roscore - The core of a ROS based system
# Description: roscore is a collection of nodes and programs that are
#              pre-requisites of a ROS-based system. You must have a roscore
#              running in order for ROS nodes to communicate. It is launched
#              using the roscore command.
#              NOTE: If you use roslaunch, it will automatically start roscore
#              if it detects that it is not already running.
#              roscore will start up:
#               - a ROS Master
#               - a ROS Parameter Server
#               - a rosout logging node 
### END INIT INFO

DAEMON=/opt/ros/hydro/bin/roscore
NAME=roscore
PIDFILE=/var/run/ros/$NAME.pid
DESC="ROS"

unset TMPDIR

test -x $DAEMON || exit 0

. /lib/lsb/init-functions
. /opt/ros/hydro/setup.sh

SSD_OPTIONS="--quiet --pidfile $PIDFILE --make-pidfile"

case "$1" in
  start)
    log_begin_msg "Starting $DESC: $NAME"

    mkdir -p `dirname "$PIDFILE"`
    start-stop-daemon --start --oknodo --background $SSD_OPTIONS --exec $DAEMON
    log_end_msg $?
    ;;
  stop)
    log_begin_msg "Stopping $DESC: $NAME"
    start-stop-daemon --stop --retry 5 --oknodo $SSD_OPTIONS --name $NAME
    log_end_msg $?
      rm -f $PIDFILE
    ;;
  restart|force-reload)
    log_begin_msg "Restarting $DESC: $NAME"
    if start-stop-daemon --stop --retry 5 --oknodo $SSD_OPTIONS --name $NAME; then
      start-stop-daemon --start --background $SSD_OPTIONS --exec $DAEMON
    fi
    log_end_msg $?
    ;;
  status)
    status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
    ;;
  *)
    N=/etc/init.d/${0##*/}
    echo "Usage: $N {start|stop|force-reload|restart|status}" >&2
    exit 1
    ;;
esac

exit 0
